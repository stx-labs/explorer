# PRs:
#   - Builds Explorer (no package push)
# Pushes to main:
#   - Builds Explorer
#   - Pushes Docker image to GitHub Container Registry
#   - Creates attestations for supply chain security

name: CI
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/CHANGELOG.md'
      - '**/package.json'
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build-publish:
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
    runs-on: ubuntu-latest
    outputs:
      docker_image_digest: ${{ steps.docker_push.outputs.digest }}
      version: ${{ steps.docker_meta.outputs.version }}
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        id: semantic
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SEMANTIC_RELEASE_PACKAGE: ${{ github.event.repository.name }}
        with:
          semantic_version: 19
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/stx-labs/explorer
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}},value=${{ steps.semantic.outputs.new_release_version }},enable=${{ steps.semantic.outputs.new_release_published == 'true' }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.semantic.outputs.new_release_version }},enable=${{ steps.semantic.outputs.new_release_published == 'true' }}

      - name: Login to GitHub Container Registry
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build/Tag/Push Image
        id: docker_push
        uses: docker/build-push-action@v5
        with:
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          platforms: linux/amd64
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          secrets: |
            "sentry_auth_token=${{ secrets.SENTRY_AUTH_TOKEN }}"
          build-args: |
            RELEASE_TAG_NAME=${{ steps.semantic.outputs.new_release_version }}
            NEXT_PUBLIC_SENTRY_DSN=${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Generate Artifact Attestation
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: generate_artifact_attestation
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2 # v2.2.3
        with:
          subject-name: ghcr.io/stx-labs/explorer
          subject-digest: ${{ steps.docker_push.outputs.digest }}
          push-to-registry: true

      - name: Docker Build Info
        run: 'echo "::notice::Built and pushed docker image to GHCR: ${{ steps.docker_meta.outputs.tags }}"'

